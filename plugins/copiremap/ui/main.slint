import { PluginParameter } from "parameter.slint";
import { ParameterKnob } from "knob.slint";
import { ParameterSlider } from "slider.slint";
import "resource/font/Fingercute-Regular.ttf";
import { VerticalBox, Button } from "std-widgets.slint";

export component PluginWindow {
    in-out property<PluginParameter> gain;

    callback start-change(PluginParameter);
    callback changed(PluginParameter, float);
    callback end-change(PluginParameter);
    callback set-string(PluginParameter, string);

    width: 800px;
    height: 500px;
    Rectangle {
        background: @linear-gradient(120deg, #2256ff 0%, #ff3b3b 50%, #ffbb00 100%);
        Rectangle {
            background: @linear-gradient(180deg, #ffffff00 50%, #0000006f 100%);
            // FIXME: Workaround for taking focus off TextInput by clicking outside it
            TouchArea {
                FocusScope {
                    enabled: true;
                }
            }

            VerticalLayout {
                padding: 10px;
                spacing: 10px;

                Rectangle {
                    height: 60px;
                    border-radius: 5px;
                    background: #00000061;
                    border-color: #ffffffb5;
                    border-width: 3px;
                    HorizontalLayout {
                        padding: 11px;
                        alignment: center;
                        Text {
                            text: "C o P i R e M a p";
                            font-size: 45px;
                            color: white;
                            font-family: "Fingercute";
                        }
                    }
                }
                
                Rectangle {
                    height: 100px;
                    border-radius: 5px;
                    background: #00000061;
                    border-color: #ffffffb5;
                    border-width: 3px;
                    HorizontalLayout {
                        padding: 12px;
                        alignment: center;
                    }
                }

                Rectangle {
                    height: 295px;
                    border-radius: 5px;
                    background: #00000061;
                    border-color: #ffffffb5;
                    border-width: 3px;
                    HorizontalLayout {
                        padding: 20px;
                        spacing: 25px;
        
                        ParameterKnob {
                            height: 25px;
                            parameter: gain;
                            text: "Gain";
                            // FIXME: Callbacks need to be mapped manually
                            start-change => { start-change(gain); }
                            changed(value) => { changed(gain, value); }
                            end-change => { end-change(gain); }
                            set-string(string) => { set-string(gain, string); }
                        }

                        ParameterKnob {
                            height: 25px;
                            parameter: gain;
        
                            // FIXME: Callbacks need to be mapped manually
                            start-change => { start-change(gain); }
                            changed(value) => { changed(gain, value); }
                            end-change => { end-change(gain); }
                            set-string(string) => { set-string(gain, string); }
                        }

                        ParameterSlider {
                            height: 10px;
                            width: 100px;
                            parameter: gain;
            
                            // FIXME: Callbacks need to be mapped manually
                            start-change => { start-change(gain); }
                            changed(value) => { changed(gain, value); }
                            end-change => { end-change(gain); }
                            set-string(string) => { set-string(gain, string); }
                        }
                        
                    }
                }
            }

            
            HorizontalLayout {
                alignment: end;
                VerticalLayout {
                    alignment: end;
                    Rectangle {
                        width: 20px;
                        height: 20px;
                        Image {
                            colorize: touch.has-hover && touch.pressed ? #aaaaaa : touch.has-hover ? #e0dfdf : #ffffff;
                            source: @image-url("resource/img/resize-right.svg");
                        }
                        touch := TouchArea {

                        }
                    }
                }
            }
        }    
    }
}
